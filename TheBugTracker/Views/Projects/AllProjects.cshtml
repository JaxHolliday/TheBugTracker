@model IEnumerable<TheBugTracker.Models.Project>
@using TheBugTracker.Models.Enums
@using Microsoft.AspNetCore.Identity
@using TheBugTracker.Services.Interfaces

@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService

@* line 12 gets user info: name and etc *@
@{
    ViewData["Title"] = "All Projects";
    BTUser bTUser = await UserManager.GetUserAsync(User);
}

<h1>All Projects</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageFileName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageFileData)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Company)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectPriority)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImageFileName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImageFileData)
                    @*@if (item.ImageFileData != null)
                        {
                            <img id="imageFileData" class="img-fluid img-thumbnail" style="width:100px;height:80px" src="data:image/*;base64,@(Convert.ToBase64String(Model.Project.ImageFileData))" />
                        }*@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Archived)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Company.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectPriority.Name)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |

                    @* use service to chceck and see is logged in user is PM for a particular project *@
                    @{ 
                        bool isProjectPM = (await ProjectService.GetProjectManagerAsync(item.Id))?.Id == bTUser.Id;
                    }

                    @if (User.IsInRole(nameof(Roles.Admin)) || isProjectPM)
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a asp-action="Restore" asp-route-id="@item.Id">Restore</a>                       
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
